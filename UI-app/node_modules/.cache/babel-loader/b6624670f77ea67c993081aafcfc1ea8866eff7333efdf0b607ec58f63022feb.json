{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMediaQuery, useTheme } from \"@mui/material\";\nimport { createContext, useContext, useState } from \"react\";\nimport { useMount } from \"react-use\";\nconst defaultCapabilities = {\n  webp: false,\n  mobile: false,\n  cookies: {}\n};\nconst CapabilitiesContext = /*#__PURE__*/createContext(defaultCapabilities);\nconst useMobile = options => {\n  _s();\n  var _options$breakpoint;\n  const [isMounted, setIsMounted] = useState(false);\n  const {\n    mobile: isMobileServer\n  } = useContext(CapabilitiesContext);\n  const isMobileClient = useMediaQuery(useTheme().breakpoints.down((_options$breakpoint = options === null || options === void 0 ? void 0 : options.breakpoint) !== null && _options$breakpoint !== void 0 ? _options$breakpoint : \"sm\"), {\n    noSsr: true\n  });\n  useMount(() => {\n    setIsMounted(true);\n  });\n  return isMounted ? isMobileClient : isMobileServer;\n};\n_s(useMobile, \"yD16qfyJXPO4JjNZZ/TFoNV7GqY=\", false, function () {\n  return [useMediaQuery, useTheme, useMount];\n});\nexport default useMobile;","map":{"version":3,"names":["useMediaQuery","useTheme","createContext","useContext","useState","useMount","defaultCapabilities","webp","mobile","cookies","CapabilitiesContext","useMobile","options","_s","_options$breakpoint","isMounted","setIsMounted","isMobileServer","isMobileClient","breakpoints","down","breakpoint","noSsr"],"sources":["/Users/denisiaparaiala/Desktop/HackTm/hacktm-app/src/hooks/hook.tsx"],"sourcesContent":["import { Breakpoint, useMediaQuery, useTheme } from \"@mui/material\";\nimport { createContext, useContext, useState } from \"react\";\nimport { useMount } from \"react-use\";\n\ninterface ICapabilities {\n  webp: boolean;\n  mobile: boolean;\n  cookies: any;\n}\n\nconst defaultCapabilities = {\n  webp: false,\n  mobile: false,\n  cookies: {},\n};\n\ntype Options = {\n  breakpoint?: Breakpoint;\n};\n\nconst CapabilitiesContext = createContext<ICapabilities>(defaultCapabilities);\n\nconst useMobile = (options?: Options): boolean => {\n  const [isMounted, setIsMounted] = useState(false);\n  const { mobile: isMobileServer } = useContext(CapabilitiesContext);\n  const isMobileClient = useMediaQuery(\n    useTheme().breakpoints.down(options?.breakpoint ?? \"sm\"),\n    { noSsr: true }\n  );\n\n  useMount(() => {\n    setIsMounted(true);\n  });\n\n  return isMounted ? isMobileClient : isMobileServer;\n};\n\nexport default useMobile;\n"],"mappings":";AAAA,SAAqBA,aAAa,EAAEC,QAAQ,QAAQ,eAAe;AACnE,SAASC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,QAAQ,QAAQ,WAAW;AAQpC,MAAMC,mBAAmB,GAAG;EAC1BC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,CAAC;AACZ,CAAC;AAMD,MAAMC,mBAAmB,gBAAGR,aAAa,CAAgBI,mBAAmB,CAAC;AAE7E,MAAMK,SAAS,GAAIC,OAAiB,IAAc;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEI,MAAM,EAAES;EAAe,CAAC,GAAGd,UAAU,CAACO,mBAAmB,CAAC;EAClE,MAAMQ,cAAc,GAAGlB,aAAa,CAClCC,QAAQ,CAAC,CAAC,CAACkB,WAAW,CAACC,IAAI,EAAAN,mBAAA,GAACF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,UAAU,cAAAP,mBAAA,cAAAA,mBAAA,GAAI,IAAI,CAAC,EACxD;IAAEQ,KAAK,EAAE;EAAK,CAChB,CAAC;EAEDjB,QAAQ,CAAC,MAAM;IACbW,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,CAAC;EAEF,OAAOD,SAAS,GAAGG,cAAc,GAAGD,cAAc;AACpD,CAAC;AAACJ,EAAA,CAbIF,SAAS;EAAA,QAGUX,aAAa,EAClCC,QAAQ,EAIVI,QAAQ;AAAA;AAOV,eAAeM,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}