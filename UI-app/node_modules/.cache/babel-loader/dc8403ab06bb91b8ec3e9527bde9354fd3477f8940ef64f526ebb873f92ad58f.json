{"ast":null,"code":"var _jsxFileName = \"/Users/denisiaparaiala/Desktop/HackTm/hacktm-app/src/components/graph/graph.tsx\";\nimport React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Graphic = props => {\n  const options = {\n    //responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n        display: false\n      },\n      title: {\n        display: true,\n        text: `${props.title} luna Martie`\n      }\n    },\n    labels: false,\n    scales: {\n      //   x: {\n      //     display: true,\n      //     title: {\n      //       display: true,\n      //       text: \"Day\",\n      //     },\n      //   },\n      //   y: {\n      //     display: true,\n      //     title: {\n      //       display: true,\n      //       text: \"Value\",\n      //     },\n      //   },\n    }\n  };\n  const labels = props.data.map(d => `${d.data.getDate()}/${d.data.getMonth()}`);\n  const data = {\n    labels,\n    datasets: [{\n      label: props.title.toString(),\n      data: props.data.map(d => d.value),\n      borderColor: props.color.toString(),\n      backgroundColor: props.color.toString(),\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    height: 50,\n    width: 100,\n    options: options,\n    data: data,\n    style: {\n      paddingLeft: \"15px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_c = Graphic;\nexport default Graphic;\nvar _c;\n$RefreshReg$(_c, \"Graphic\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","Line","jsxDEV","_jsxDEV","register","Graphic","props","options","plugins","legend","position","display","title","text","labels","scales","data","map","d","getDate","getMonth","datasets","label","toString","value","borderColor","color","backgroundColor","fill","height","width","style","paddingLeft","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/denisiaparaiala/Desktop/HackTm/hacktm-app/src/components/graph/graph.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { color } from \"@mui/system\";\nimport { IRecordData } from \"../../interfaces/interfaces\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\ninterface IProps {\n  data: IRecordData[];\n  title: String;\n  color: String;\n}\n\nconst Graphic: React.FC<IProps> = (props) => {\n  const options = {\n    //responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as const,\n        display: false,\n      },\n      title: {\n        display: true,\n        text: `${props.title} luna Martie`,\n      },\n    },\n    labels: false,\n    scales: {\n      //   x: {\n      //     display: true,\n      //     title: {\n      //       display: true,\n      //       text: \"Day\",\n      //     },\n      //   },\n      //   y: {\n      //     display: true,\n      //     title: {\n      //       display: true,\n      //       text: \"Value\",\n      //     },\n      //   },\n    },\n  };\n  const labels = props.data.map(\n    (d) => `${d.data.getDate()}/${d.data.getMonth()}`\n  );\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: props.title.toString(),\n        data: props.data.map((d) => d.value),\n        borderColor: props.color.toString(),\n        backgroundColor: props.color.toString(),\n        fill: true,\n      },\n    ],\n  };\n  return (\n    <Line\n      height={50}\n      width={100}\n      options={options}\n      data={data}\n      style={{ paddingLeft: \"15px\" }}\n    />\n  );\n};\n\nexport default Graphic;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvCX,OAAO,CAACY,QAAQ,CACdX,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MACF,CAAC;AAQD,MAAMK,OAAyB,GAAIC,KAAK,IAAK;EAC3C,MAAMC,OAAO,GAAG;IACd;IACAC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,KAAc;QACxBC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAG,GAAEP,KAAK,CAACM,KAAM;MACvB;IACF,CAAC;IACDE,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE;MACN;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;EAEJ,CAAC;EACD,MAAMD,MAAM,GAAGR,KAAK,CAACU,IAAI,CAACC,GAAG,CAC1BC,CAAC,IAAM,GAAEA,CAAC,CAACF,IAAI,CAACG,OAAO,CAAC,CAAE,IAAGD,CAAC,CAACF,IAAI,CAACI,QAAQ,CAAC,CAAE,EAClD,CAAC;EAED,MAAMJ,IAAI,GAAG;IACXF,MAAM;IACNO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAEhB,KAAK,CAACM,KAAK,CAACW,QAAQ,CAAC,CAAC;MAC7BP,IAAI,EAAEV,KAAK,CAACU,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACM,KAAK,CAAC;MACpCC,WAAW,EAAEnB,KAAK,CAACoB,KAAK,CAACH,QAAQ,CAAC,CAAC;MACnCI,eAAe,EAAErB,KAAK,CAACoB,KAAK,CAACH,QAAQ,CAAC,CAAC;MACvCK,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EACD,oBACEzB,OAAA,CAACF,IAAI;IACH4B,MAAM,EAAE,EAAG;IACXC,KAAK,EAAE,GAAI;IACXvB,OAAO,EAAEA,OAAQ;IACjBS,IAAI,EAAEA,IAAK;IACXe,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEN,CAAC;AAACC,EAAA,GAxDIhC,OAAyB;AA0D/B,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}